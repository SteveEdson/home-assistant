- platform: steam_online
  api_key: !secret steam_api_key
  accounts:
    - !secret steam_account_id

# - platform: fitbit
#   monitored_resources:
#     - "body/weight"
#     - "activities/steps"
#     - "activities/heart"
#     - "devices/battery"

#- platform: pi_hole
#  host: 192.168.1.120

- platform: speedtest
  monitored_conditions:
    - ping
    - download
    - upload
  hour:
    - 6
    - 18

- platform: darksky
  api_key: !secret darksky_api_key
  monitored_conditions:
    - summary
    - minutely_summary
  update_interval: '01:00'

#- platform: command_line
#  name: CPU Temperature
#  command: "sensors | grep -Po \"\\d*\\.\\d*\" | head -1"
#  # If errors occur, remove degree symbol below
#  unit_of_measurement: "Â°C"
#  value_template: '{{ value | float | round(2) }}'

- platform: whois
  domain: steveedson.co.uk
  name: SteveEdson.co.uk

- platform: whois
  domain: !secret base_domain
  name: Home Assistant

- platform: whois
  domain: fantasyformula1.co.uk
  name: FantasyFormula1.co.uk

- platform: google_travel_time
  name: Time to Work
  api_key: !secret google_assistant_api_key
  origin: !secret home_address
  destination: !secret work_address

- platform: google_travel_time
  name: Time to Home
  api_key: !secret google_assistant_api_key
  origin: !secret work_address
  destination: !secret home_address
  
- platform: cert_expiry
  name: SteveEdson.co.uk SSL 
  host: steveedson.co.uk
 
- platform: cert_expiry 
  host: fantasyformula1.co.uk
  name: FantasyFormula1.co.uk SSL

- platform: cert_expiry
  host: !secret base_url
  name: Home Assistant SSL

- platform: rest
  resource: !secret google_holiday_sheet
  name: Holiday allowance remaining this year
  value_template: '{{ value_json.feed.entry[0]["gsx$allowanceremaining"]["$t"] }}'
  unit_of_measurement: days
  scan_interval: 7200

- platform: rest
  resource: !secret google_holiday_sheet
  name: Holiday's not yet taken
  value_template: '{{ value_json.feed.entry[0]["gsx$futureholidays"]["$t"] }}'
  unit_of_measurement: days
  scan_interval: 7200

- platform: rest
  resource: !secret google_holiday_sheet
  name: Next Holiday
  value_template: '{{ value_json.feed.entry[0]["gsx$nextholiday"]["$t"] }}'
  scan_interval: 7200

- platform: rest
  resource: !secret ff1_stats_url
  name: FF1 Stats
  value_template: '{{ value_json.data.next.name }} - {{ value_json.data.next.percentPredicted }}% Predicted'
  json_attributes:
    - data
  scan_interval: 7200

# - platform: rest
#   resource: !secret bins_api
#   name: Bin days
#   value_template: >
#     {% if value_json.success %}
#     {% set numSeconds = (as_timestamp(strptime(value_json.date, "%d/%m/%Y")) | float) - (as_timestamp(now()) | float) %}{{ value_json.bins }} in {{ (numSeconds / 60 / 60 / 24) | round }} days
#     {% else %}
#     Bin data not available
#     {% endif %}
#   json_attributes:
#     - date
#     - bins
#   scan_interval: 7200

- platform: rest
  resource: !secret pay_day_api
  name: Pay Day
  value_template: '{{ value_json.fromNow }}'
  json_attributes:
    - payday
    - fromNow
    - formatted
    - unix
    - status
    - daysRemaining
    - isToday
  scan_interval: 7200

- platform: systemmonitor
  resources:
    - type: disk_free
      arg: /
    - type: memory_free
    - type: load_5m

- platform: template
  sensors:
    race_deadline_day:
      friendly_name: "Race Deadline Day"
      value_template: "{{ ((states.sensor.ff1_stats.attributes.data.next.predictionDeadline - as_timestamp(now())) < (60 * 60 * 24)) and states.sensor.ff1_stats.attributes.data.next.predictionDeadline > as_timestamp(now()) }}"

    house_temperature:
      friendly_name: "House Temperature"
      unit_of_measurement: 'degrees'
      value_template: "{{ float(states.climate.heating.attributes.current_temperature) }}"

- platform: version
  source: docker

- platform: mold_indicator
  indoor_temp_sensor: sensor.temperature_158d00027265db
  indoor_humidity_sensor: sensor.humidity_158d00027265db
  outdoor_temp_sensor: sensor.outside_temperature
  calibration_factor: 2.0