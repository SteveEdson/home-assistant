homeassistant: !include home_assistant.yaml

http: !include http.yaml

lovelace:
  mode: yaml
  resources:
    - url: /local/custom_ui/card-tools.js?v=2.1
      type: js
    - url: /local/custom_ui/auto-entities.js?v=1.5
      type: js
    - url: /local/custom_ui/bar-card.js?v=2
      type: js
    - url: /local/custom_ui/mini-graph-card-bundle.js?v=0.9.3
      type: module
    - url: /local/custom_ui/mini-media-player-bundle.js?v=1.11.0
      type: module
    - url: /local/custom_ui/unused-card.js?v=0.3
      type: module
    - url: /local/custom_ui/simple-weather-card-bundle.js?v=0.8.2
      type: module
    - url: /local/custom_ui/slider-entity-row.js?v=8
      type: module
    - url: /local/custom_ui/gui-sandbox.js
      type: module
    - url: /local/custom_ui/plan-coordinates.js?v=2
      type: module
    - url: /local/custom_ui/xiaomi-vacuum-card.js?v=4.2.0
      type: js
    - url: /local/custom_ui/layout-card.js?v=16
      type: module
    - url: /local/custom_ui/bignumber-card.js
      type: module
    - url: /local/custom_ui/simple-thermostat.js?v=0.42
      type: module
    - url: https://cdn.jsdelivr.net/gh/bramkragten/custom-ui@master/swipe-card/swipe-card.js
      type: module
    - url: /local/custom_lovelace/xiaomi_vacuum_map_card/xiaomi-vacuum-map-card.js?v=1.2.3
      type: module
    - url: /local/custom_ui/card-mod.js
      type: module
    - url: /local/custom_ui/zigbee2mqtt-networkmap.js
      type: module
    - url: /local/custom_ui/vacuum-card.js?v=1.6.0
      type: module
    - url: /hacsfiles/rgb-light-card/card.js
      type: module
    - url: /local/custom_ui/threedy-card.js?v=2021.0.b1
      type: module
    - url: /local/community/home-assistant-sun-card/home-assistant-sun-card.js
      type: module
    - url: /hacsfiles/lovelace-mushroom/mushroom.js
      type: module
    - url: /local/community/power-flow-card-plus/power-flow-card-plus.js
      type: module  
      # - url: /local/custom_ui/custom-header.js
      #   type: module

dhcp:

system_health:

system_log:

# Show links to resources in log and frontend
#introduction:

media_source:

# Enables the frontend
frontend: !include frontend.yaml

input_select: !include_dir_named inputs
# input_slider: !include inputs/input_slider.yaml

input_text:
  zigbee_update_device:
    name: Update Zigbee Device

input_number:
  servo_control:
    name: Servo Control
    initial: 0
    min: -100
    max: 100
    step: 1
    mode: slider

input_boolean:
  guest_mode:
    name: Guest mode
    initial: off
    icon: mdi:home-account

#google:
#  client_id: !secret google_calendar_client_id
#  client_secret: !secret google_calendar_client_secret

# Discover some devices automatically
#discovery:

ssdp:

zeroconf:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

energy:

# Track the sun
sun:

dialogflow:

intent_script: !include intents.yaml

binary_sensor: !include_dir_merge_list binary_sensors/

sensor: !include_dir_merge_list sensors/

camera: !include cameras.yaml

#image_processing:
#  - platform: doods
#    url: "http://192.168.1.140:8080"
#    scan_interval: 10000
#    detector: default
#    file_out:
#      - "/config/www/{{ camera_entity.split('.')[1] }}_latest.jpg"
#      #- "/config/www/{{ camera_entity.split('.')[1] }}_{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"
#    confidence: 58
#    area:
#      # Exclude top 7% of image
#      top: 0.07
#      left: 0.08
#    labels:
#     # - car
#      - cat
#      - dog
#      - truck
#      - person
#      - bicycle
#      - motorcycle
#      - backpack
#    source:
#      - entity_id: camera.g3_flex_low_res
#  # - platform: tensorflow
#  #   scan_interval: 604800
#  #   source:
#  #     - entity_id: camera.front_2
#  #   file_out:
#  #     - "/config/www/{{ camera_entity.split('.')[1] }}_tf_latest.jpg"
#  #     - "/config/www/{{ camera_entity.split('.')[1] }}_tf_{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"
#  #   model:
#  #     graph: /config/tensorflow/frozen_inference_graph.pb

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say
  - platform: microsoft
    api_key: !secret microsoft_api_key
    language: en-gb
    gender: Female
    type: Susan, Apollo
    rate: 20

config:

mqtt:
  switch:
    - name: "Zigbee2mqtt Main join"
      state_topic: "zigbee2mqtt/bridge/config/permit_join"
      command_topic: "zigbee2mqtt/bridge/config/permit_join"
      payload_on: "true"
      payload_off: "false"
  sensor:
    - name: Zigbee2mqtt Networkmap
      # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
      state_topic: zigbee2mqtt/bridge/networkmap/raw
      value_template: >-
        {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
      # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
      json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw
    - name: Zigbee2mqtt Bridge state
      state_topic: "zigbee2mqtt/bridge/state"
      icon: mdi:router-wireless
      # Sensor for Showing the Zigbee2mqtt Version
    - name: Zigbee2mqtt Version
      state_topic: "zigbee2mqtt/bridge/config"
      value_template: "{{ value_json.version }}"
      icon: mdi:zigbee
    # Sensor for Showing the Coordinator Version
    - name: Coordinator Version
      state_topic: "zigbee2mqtt/bridge/config"
      value_template: "{{ value_json.coordinator }}"
      icon: mdi:chip
    - name: Zigbee2mqtt Networkmap
      # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
      state_topic: zigbee2mqtt/bridge/networkmap/raw
      value_template: >-
        {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
      # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
      json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw
    - name: Zigbee2mqtt Bridge state
      state_topic: "zigbee2mqtt/bridge/state"
      icon: mdi:router-wireless
      # Sensor for Showing the Zigbee2mqtt Version
    - name: Zigbee2mqtt Version
      state_topic: "zigbee2mqtt/bridge/config"
      value_template: "{{ value_json.version }}"
      icon: mdi:zigbee
    # Sensor for Showing the Coordinator Version
    - name: Coordinator Version
      state_topic: "zigbee2mqtt/bridge/config"
      value_template: "{{ value_json.coordinator }}"
      icon: mdi:chip
  binary_sensor:
    - name: "Aegis - Connected"
      state_topic: "iotlink/workgroup/desktop-b4rim5c/lwt"
      value_template: "{{ value }}"
      payload_on: "ON"
      payload_off: "OFF"
      device_class: "connectivity"
      qos: 1

#mqtt:
#  discovery: true
#   discovery_prefix: homeassistant
#  broker: !secret mqtt_address
#   username: !secret mqtt_username
#   password: !secret mqtt_password
#   client_id: home-assistant
#   port: 443
#   certificate: /etc/ssl/certs/ca-certificates.crt

light: !include lights.yaml

template:
  - trigger:
      - platform: time_pattern
        hours: /1
      - platform: homeassistant
        event: start
    action:
      - service: weather.get_forecasts
        data:
          type: daily
        target:
          entity_id: weather.openweathermap # change to your weather entity
        response_variable: daily
    sensor:
      - name: Weather Forecast Daily
        unique_id: weather_forecast_daily
        state: "{{ states('weather.openweathermap') }}" # # change to your weather entity in this line
        attributes:
          temperature: "{{ state_attr('weather.openweathermap', 'temperature') }}" # change to your weather entity
          temperature_unit: "{{ state_attr('weather.openweathermap', 'temperature_unit') }}" # change to your weather entity
          forecast: "{{ daily['weather.openweathermap'].forecast }}" # change to your weather entity

spotcast:
  sp_dc: !secret sp_dc
  sp_key: !secret sp_key
  country: GB

media_player:
  
bluetooth:

assist_pipeline:

#device_tracker:
 # - platform: bluetooth_tracker
  # - platform: bluetooth_le_tracker
  #   track_battery: true
  #   track_new_devices: true
#  - platform: asuswrt
#    host: 192.168.1.1
#    username: !secret router_username
#    password: !secret router_password
#    interval_seconds: 10
#    consider_home: 180
#    track_new_devices: yes

#asuswrt:
#  host: 192.168.1.1
#  username: !secret router_username
#  password: !secret router_password

switch: !include switches.yaml

automation: !include_dir_merge_list automations/

alert: !include alerts.yaml

notify: !include notifiers.yaml

ifttt:
  key: !secret ifttt_key

script: !include_dir_named scripts

digital_ocean:
  access_token: !secret digital_ocean_key

logger:
  default: info

group: !include groups.yaml

scene: !include scenes.yaml

google_assistant:
  project_id: edson-home
  service_account: !include google_service_account.json
  report_state: true
  exposed_domains:
    - switch
    - light
    - climate
    - camera
    - vacuum
    - scene
    - media_player
    - sensor
    - lock
    - button
#  entity_config:
#    light.cupboard:
#      name: Cupboard lights
#      aliases:
#        - Kitchen Counter Lights
#        - Coloured Lights
#      expose: true

calendar:
 - platform: todoist
   token: !secret todoist_api_token
   custom_projects:
     - name: 'All Projects'
     - name: 'Important'
       labels:
         - Important
     - name: 'Due Today'
       due_date_days: 0
     - name: 'Due This Week'
       due_date_days: 7

shell_command:
  generate_gif: 'gifsicle --loop /config/www/g3_flex_2*.jpg /config/www/g3_flex.gif'

media_extractor:

backup:

homeassistant_alerts:

my:

zone:
  - name: Home
    latitude: !secret my_latitude
    longitude: !secret my_longitude
    radius: 60
    icon: mdi:home
  - name: Work
    latitude: !secret work_lat
    longitude: !secret work_long
    radius: 150
    icon: mdi:brush

alarm_control_panel:
  - platform: manual
    name: House Alarm
    code: !secret alarm_code
    delay_time: 30
    armed_home:
      arming_time: 0
      delay_time: 0

duckdns:
  domain: !secret duck_dns_domain
  access_token: !secret duck_dns_token

recorder:
  purge_keep_days: 30
  db_url: !secret db_url

person: !include people.yaml

stream:

emulated_hue:
  listen_port: 80

#prometheus:
#  namespace: ha

rest_command:
  find_phone:
    url: 'http://192.168.1.60:5000/command?message=Find my phone'

plant:
  lounge:
    sensors:
      moisture: sensor.xiaomi_hhccjcy01_moisture
      temperature: sensor.xiaomi_hhccjcy01_temperature
      conductivity: sensor.xiaomi_hhccjcy01_soil_conductivity
      brightness: sensor.xiaomi_hhccjcy01_illuminance
    min_moisture: 20
    max_moisture: 65
    min_temperature: 8
    max_temperature: 35

climate:
  - platform: generic_thermostat
    name: Home Office
    heater: switch.office_heating
    target_sensor: sensor.temperature_158d00027265db
    ac_mode: false
    max_temp: 20
    min_temp: 17.5
    away_temp: 10
    min_cycle_duration:
      seconds: 30
    keep_alive:
      minutes: 3
    initial_hvac_mode: "heat"

timer:
  bedroom_sleep_timer:
    duration: '00:30:00'

telegram_bot:
  - platform: polling
    api_key: !secret telegram_secret
    parse_mode: html
    allowed_chat_ids: !secret telegram_chats

owntracks:
  max_gps_accuracy: 200

mobile_app:

#tuya:
 # username: !secret phone_number
#  password: !secret tuya_pass
#  country_code: "44"
#  platform: smart_life

octoprint:
  host: octopi
  api_key: !secret octoprint_api

waste_collection_schedule:
  sources:
    - name: rotherham_gov_uk
      args:
        uprn: !secret bins_uprn
